// <auto-generated />
using System;
using FinanceApp.Server.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceApp.Server.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("20220626093714_added Ticketers")]
    partial class addedTicketers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FinanceApp.Server.Models.TicketerDataToDb", b =>
                {
                    b.Property<int>("TicketerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Close")
                        .HasColumnType("float");

                    b.Property<double>("Highest")
                        .HasColumnType("float");

                    b.Property<double>("Lowest")
                        .HasColumnType("float");

                    b.Property<double>("NumberOfTransactons")
                        .HasColumnType("float");

                    b.Property<bool>("OTC")
                        .HasColumnType("bit");

                    b.Property<double>("Open")
                        .HasColumnType("float");

                    b.Property<int>("Timestamp")
                        .HasColumnType("int");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.Property<double>("VolumeWeighted")
                        .HasColumnType("float");

                    b.HasKey("TicketerId", "Date");

                    b.ToTable("TicketerData", (string)null);
                });

            modelBuilder.Entity("FinanceApp.Server.Models.TicketerToDb", b =>
                {
                    b.Property<int>("TicketerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TicketerId"), 1L, 1);

                    b.Property<string>("CEO")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Sector")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("TicketerId");

                    b.ToTable("Ticketer", (string)null);

                    b.HasData(
                        new
                        {
                            TicketerId = 1,
                            CEO = "tmp",
                            Country = "US",
                            Logo = "https://api.polygon.io/v1/reference/company-branding/d3d3Lmx1bWVuLmNvbQ/images/2022-01-10_logo.png",
                            Name = "Lumen Technologies, Inc.",
                            Sector = "stocks",
                            Symbol = "LUMN"
                        },
                        new
                        {
                            TicketerId = 2,
                            CEO = "tmp",
                            Country = "US",
                            Logo = "https://api.polygon.io/v1/reference/company-branding/d3d3LndpbGxpYW1zLmNvbQ/images/2022-01-10_logo.png",
                            Name = "Williams Companies Inc.",
                            Sector = "stocks",
                            Symbol = "WMB"
                        },
                        new
                        {
                            TicketerId = 3,
                            CEO = "tmp",
                            Country = "US",
                            Logo = "https://api.polygon.io/v1/reference/company-branding/d3d3LnN1emFuby5jb20uYnI/images/2022-01-10_logo.png",
                            Name = "Suzano S.A. American Depositary Shares",
                            Sector = "stocks",
                            Symbol = "SUZ"
                        },
                        new
                        {
                            TicketerId = 4,
                            CEO = "tmp",
                            Country = "US",
                            Logo = "https://api.polygon.io/v1/reference/company-branding/d3d3LmludHVpdC5jb20/images/2022-01-10_logo.svg",
                            Name = "Intuit Inc",
                            Sector = "stocks",
                            Symbol = "INTU"
                        },
                        new
                        {
                            TicketerId = 5,
                            CEO = "tmp",
                            Country = "US",
                            Logo = "https://api.polygon.io/v1/reference/company-branding/d3d3LnRlZ25hLmNvbQ/images/2022-01-10_logo.png",
                            Name = "TEGNA Inc.",
                            Sector = "stocks",
                            Symbol = "TGNA"
                        },
                        new
                        {
                            TicketerId = 6,
                            CEO = "tmp",
                            Country = "US",
                            Logo = "https://api.polygon.io/v1/reference/company-branding/d3d3LnRpbWtlbnN0ZWVsLmNvbQ/images/2022-01-10_icon.jpeg",
                            Name = "TIMKENSTEEL CORPORATION",
                            Sector = "stocks",
                            Symbol = "TMST"
                        },
                        new
                        {
                            TicketerId = 7,
                            CEO = "tmp",
                            Country = "US",
                            Logo = "https://api.polygon.io/v1/reference/company-branding/d3d3LnRlc2xhLmNvbQ/images/2022-01-10_logo.svg",
                            Name = "Tesla, Inc. Common Stock",
                            Sector = "stocks",
                            Symbol = "TSLA"
                        },
                        new
                        {
                            TicketerId = 8,
                            CEO = "tmp",
                            Country = "US",
                            Logo = "https://api.polygon.io/v1/reference/company-branding/d3d3LnRyYW5zLWdsb2JlLmNvbQ/images/2022-01-10_logo.svg",
                            Name = "Transglobe Energy Corp",
                            Sector = "stocks",
                            Symbol = "TGA"
                        },
                        new
                        {
                            TicketerId = 9,
                            CEO = "tmp",
                            Country = "US",
                            Logo = "https://api.polygon.io/v1/reference/company-branding/d3d3Lm1vZ28uY2E/images/2022-01-10_logo.png",
                            Name = "Mogo Inc. Common Shares",
                            Sector = "stocks",
                            Symbol = "MOGO"
                        },
                        new
                        {
                            TicketerId = 10,
                            CEO = "tmp",
                            Country = "US",
                            Logo = "https://api.polygon.io/v1/reference/company-branding/d3d3LmVuc3Rhcmdyb3VwLmNvbQ/images/2022-01-10_logo.png",
                            Name = "Enstar Group Limited Depository",
                            Sector = "stocks",
                            Symbol = "ESGRO"
                        });
                });

            modelBuilder.Entity("FinanceApp.Server.Models.UserToDb", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Email");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("FinanceApp.Server.Models.WatchList", b =>
                {
                    b.Property<int>("WatchListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WatchListId"), 1L, 1);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("WatchListId");

                    b.HasIndex("UserEmail");

                    b.ToTable("WatchList", (string)null);
                });

            modelBuilder.Entity("FinanceApp.Server.Models.WatchList_Ticketer", b =>
                {
                    b.Property<int>("TicketerId")
                        .HasColumnType("int");

                    b.Property<int>("WatchListId")
                        .HasColumnType("int");

                    b.HasKey("TicketerId", "WatchListId");

                    b.HasIndex("WatchListId");

                    b.ToTable("WatchList_Ticketer", (string)null);
                });

            modelBuilder.Entity("FinanceApp.Server.Models.TicketerDataToDb", b =>
                {
                    b.HasOne("FinanceApp.Server.Models.TicketerToDb", "Ticketer")
                        .WithMany("TicketerDatas")
                        .HasForeignKey("TicketerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticketer");
                });

            modelBuilder.Entity("FinanceApp.Server.Models.WatchList", b =>
                {
                    b.HasOne("FinanceApp.Server.Models.UserToDb", "User")
                        .WithMany("WatchLists")
                        .HasForeignKey("UserEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FinanceApp.Server.Models.WatchList_Ticketer", b =>
                {
                    b.HasOne("FinanceApp.Server.Models.TicketerToDb", "Ticketer")
                        .WithMany("WatchList_Ticketers")
                        .HasForeignKey("TicketerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FinanceApp.Server.Models.WatchList", "WatchList")
                        .WithMany("WatchList_Ticketers")
                        .HasForeignKey("WatchListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ticketer");

                    b.Navigation("WatchList");
                });

            modelBuilder.Entity("FinanceApp.Server.Models.TicketerToDb", b =>
                {
                    b.Navigation("TicketerDatas");

                    b.Navigation("WatchList_Ticketers");
                });

            modelBuilder.Entity("FinanceApp.Server.Models.UserToDb", b =>
                {
                    b.Navigation("WatchLists");
                });

            modelBuilder.Entity("FinanceApp.Server.Models.WatchList", b =>
                {
                    b.Navigation("WatchList_Ticketers");
                });
#pragma warning restore 612, 618
        }
    }
}
